{"map":"{\"version\":3,\"sources\":[\"/Users/selinoser/Desktop/app/fetching/src/Components/News.js\",\"/Users/selinoser/Desktop/app/fetching/src/Components/Profile.js\",\"/Users/selinoser/Desktop/app/fetching/src/Components/Error.js\",\"/Users/selinoser/Desktop/app/fetching/src/Components/App.js\",\"/Users/selinoser/Desktop/app/fetching/src/serviceWorker.js\",\"/Users/selinoser/Desktop/app/fetching/src/index.js\"],\"names\":[\"News\",\"_ref\",\"match\",\"react_default\",\"a\",\"createElement\",\"Profile\",\"Error\",\"App\",\"state\",\"loggedIn\",\"OnClickButton\",\"_this\",\"setState\",\"prevState\",\"_this2\",\"this\",\"react_router_dom\",\"className\",\"exact\",\"to\",\"type\",\"onClick\",\"value\",\"react_router\",\"path\",\"render\",\"component\",\"Components_Profile\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"Components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yRAOeA,EAJF,SAAAC,GAAAA,EAAEC,MAAF,OACbC,EAAAC,EAAAC,cAAA,KAAA,KAAA,cCGeC,EAJC,WAAA,OAChBH,EAAAC,EAAAC,cAAA,KAAA,KAAA,gCCGeE,EAJD,WAAA,OACdJ,EAAAC,EAAAC,cAAA,KAAA,KAAA,4BCsEeG,6MA/DbC,MAAQ,CACNC,UAAU,KAGZC,cAAe,WACZC,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC3BJ,UAAWI,EAAUJ,qFAIhB,IAAAK,EAAAC,KACP,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,CAAIa,UAAU,UACZf,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,OAAK,EAACC,GAAG,KAAlB,aACJjB,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,OAAK,EAACC,GAAG,SAAlB,SACJjB,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,OAAK,EAACC,GAAG,YAAlB,YACJjB,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,OAAK,EAACC,GAAG,YAAlB,aAGNjB,EAAAC,EAAAC,cAAA,KAAA,MAAKF,EAAAC,EAAAC,cAAA,KAAA,MAELF,EAAAC,EAAAC,cAAA,QAAA,CACEgB,KAAK,SACLC,QAAUN,KAAKL,cACfY,MAAQP,KAAKP,MAAMC,SAAW,SAAW,UAC3CP,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,IAAIN,OAAK,EACnBO,OAAS,WACL,OAAOvB,EAAAC,EAAAC,cAAA,KAAA,KAAA,eAKbF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,WAAWN,OAAK,EAC1BO,OAAS,WACL,OAAOvB,EAAAC,EAAAC,cAAA,KAAA,KAAA,mBAKbF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,QACVN,OAAK,EACLQ,UAAW3B,IAGbG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,WAAWN,OAAK,EAC1BO,OAAS,WAAA,OACPX,EAAKN,MAAMC,SAAYP,EAAAC,EAAAC,cAACuB,EAAD,MAAezB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUJ,GAAG,SAKvDjB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOG,UAAWpB,cAxDZsB,EAAAA,WCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/B,MACvB,2DCXNgC,EAAAA,EAASR,OAAOvB,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\n\\nconst News = ({match}) => \\n<h1>News Page</h1> ;\\n\\n\\nexport default News;\",\"import React from 'react';\\n\\n\\nconst Profile = () => \\n<h1>Profile Page: Selin Ã–ser</h1> ;\\n\\n\\nexport default Profile;\",\"import React from 'react';\\n\\n\\nconst Error = () => \\n<h1>This page is not found.</h1> ;\\n\\n\\nexport default Error;\",\"import React, { Component } from 'react';\\nimport '../App.css';\\n\\nimport {BrowserRouter, Route, NavLink, Redirect, Switch} from 'react-router-dom';\\n\\nimport News from './News';\\nimport Profile from './Profile';\\nimport Error from './Error';\\n\\nclass App extends Component {\\n\\n  state = {\\n    loggedIn :false\\n  }\\n\\n  OnClickButton= () => {\\n     this.setState(prevState => ({\\n      loggedIn: !prevState.loggedIn\\n     }))\\n  }\\n\\n  render() {\\n    return (\\n      <BrowserRouter>\\n        <div>\\n          <ul className=\\\"navbar\\\">\\n            <li><NavLink exact to=\\\"/\\\">Homepage</NavLink></li>\\n            <li><NavLink exact to=\\\"/news\\\">News</NavLink></li>\\n            <li><NavLink exact to=\\\"/contact\\\">Contact</NavLink></li>\\n            <li><NavLink exact to=\\\"/profile\\\">Profile</NavLink></li>\\n          </ul>\\n\\n          <br/><br/>\\n\\n          <input \\n            type=\\\"button\\\" \\n            onClick= {this.OnClickButton} \\n            value={ this.state.loggedIn ? 'Logout' : 'Login' } />\\n          <Switch>\\n            <Route path=\\\"/\\\" exact \\n              render= {() => { \\n                  return(<h1>Homepage</h1>)\\n                }\\n              }>\\n            </Route>\\n\\n            <Route path=\\\"/contact\\\" exact \\n              render= {() => { \\n                  return(<h1>Contact Page</h1>)\\n                }\\n              }>\\n            </Route>\\n\\n            <Route path=\\\"/news\\\"  \\n              exact \\n              component={News}>\\n            </Route>\\n\\n            <Route path=\\\"/profile\\\" exact \\n              render= {() => ( \\n                this.state.loggedIn ? (<Profile/>) : (<Redirect to=\\\"/\\\" />) \\n                )\\n              }>\\n            </Route>\\n\\n            <Route component={Error}></Route>\\n\\n          </Switch>\\n      </div>\\n   </BrowserRouter>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './Components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,t,n){e.exports=n(37)},27:function(e,t,n){},28:function(e,t,n){},37:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),r=n(14),c=n.n(r),o=(n(27),n(15)),u=n(16),i=n(20),m=n(17),s=n(21),E=(n(28),n(7)),h=n(5),g=function(e){e.match;return l.a.createElement(\"h1\",null,\"News Page\")},f=function(){return l.a.createElement(\"h1\",null,\"Profile Page: Selin \\xd6ser\")},p=function(){return l.a.createElement(\"h1\",null,\"This page is not found.\")},d=function(e){function t(){var e,n;Object(o.a)(this,t);for(var a=arguments.length,l=new Array(a),r=0;r<a;r++)l[r]=arguments[r];return(n=Object(i.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(l)))).state={loggedIn:!1},n.OnClickButton=function(){n.setState(function(e){return{loggedIn:!e.loggedIn}})},n}return Object(s.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(E.a,null,l.a.createElement(\"div\",null,l.a.createElement(\"ul\",{className:\"navbar\"},l.a.createElement(\"li\",null,l.a.createElement(E.b,{exact:!0,to:\"/\"},\"Homepage\")),l.a.createElement(\"li\",null,l.a.createElement(E.b,{exact:!0,to:\"/news\"},\"News\")),l.a.createElement(\"li\",null,l.a.createElement(E.b,{exact:!0,to:\"/contact\"},\"Contact\")),l.a.createElement(\"li\",null,l.a.createElement(E.b,{exact:!0,to:\"/profile\"},\"Profile\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"input\",{type:\"button\",onClick:this.OnClickButton,value:this.state.loggedIn?\"Logout\":\"Login\"}),l.a.createElement(h.d,null,l.a.createElement(h.b,{path:\"/\",exact:!0,render:function(){return l.a.createElement(\"h1\",null,\"Homepage\")}}),l.a.createElement(h.b,{path:\"/contact\",exact:!0,render:function(){return l.a.createElement(\"h1\",null,\"Contact Page\")}}),l.a.createElement(h.b,{path:\"/news\",exact:!0,component:g}),l.a.createElement(h.b,{path:\"/profile\",exact:!0,render:function(){return e.state.loggedIn?l.a.createElement(f,null):l.a.createElement(h.a,{to:\"/\"})}}),l.a.createElement(h.b,{component:p}))))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(l.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[22,1,2]]]);","extractedComments":[]}